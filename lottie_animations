	var lottie, animations
  
	// Return a promise that resolves to true once animation is loaded
	async function animationLoaded(animation) {
		if(animation.isLoaded) {
			return true
		}

		return new Promise((resolve, reject) => {
			animation.addEventListener('DOMLoaded', () => {
				resolve(true)
			})
		})
	}

	// Return a promise that resolves to true once all animations are loaded
	async function waitForAnimationsLoaded(animations) {
		await Promise.all(animations.map(animationLoaded))
	}

	async function initAnimations() {
		lottie = Webflow.require('lottie').lottie
		animations = lottie.getRegisteredAnimations()
		await waitForAnimationsLoaded(animations)
	}

	var Webflow = Webflow || []

	Webflow.push(() => {
		initAnimations()
			.then(() => {
				console.log('Initialized animations')
				// hide splash screen
			})
			.catch((error) => {
				console.error(error)
			})
	})